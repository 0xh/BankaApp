{"version":3,"sources":["../../app/middlewares/AccountScafold.js"],"names":["AccountScafold","req","res","next","currentDateTime","Date","userServices","UserService","userdetails","userData","userdata","userExistBefore","email","undefined","status","json","msg","passedUser","AccountPayload","body","accountNumber","e","createdOn","toString","owner","id","console","log","AccountInput"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;AAIA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAMC,eAAe,GAAG,IAAIC,IAAJ,EAAxB;AACA,MAAMC,YAAY,GAAG,IAAIC,uBAAJ,EAArB;AACA,MAAMC,WAAW,GAAGP,GAAG,CAACQ,QAAxB;AACA,MAAMC,QAAQ,GAAGJ,YAAY,CAACK,eAAb,CAA6BH,WAAW,CAACI,KAAzC,CAAjB;;AACA,MAAIF,QAAQ,KAAKG,SAAjB,EAA4B;AACxBX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,MAAAA,MAAM,EAAE,GADS;AAEjBE,MAAAA,GAAG,EAAE;AAFY,KAArB;AAIH;;AACDf,EAAAA,GAAG,CAACgB,UAAJ,GAAiBP,QAAjB;AACA,MAAMQ,cAAc,GAAGjB,GAAG,CAACkB,IAA3B;;AACA,MAAI;AACAD,IAAAA,cAAc,CAACE,aAAf,GAA+B,wCAA/B;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACR,WAAOnB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,GAAG,EAAE;AADmB,KAArB,CAAP;AAGH;;AAEDE,EAAAA,cAAc,CAACJ,MAAf,GAAwB,QAAxB;AACAI,EAAAA,cAAc,CAACI,SAAf,GAA2BlB,eAAe,CAACmB,QAAhB,EAA3B;AACAL,EAAAA,cAAc,CAACM,KAAf,GAAuBd,QAAQ,CAACe,EAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,cAAZ;AACAjB,EAAAA,GAAG,CAAC2B,YAAJ,GAAmBV,cAAnB;AACAf,EAAAA,IAAI;AACP,CA3BD;;eA6BeH,c","sourcesContent":["import UserService from '../services/userService';\r\nimport generateAccount from '../../utils/generateAccountNumber';\r\n\r\n/**The Account scaffold is reponsible for autogenerating required fields for an account \r\n * after the user trys creating account by entering the type of account and password\r\n */\r\n\r\nconst AccountScafold = (req, res, next) => {\r\n    const currentDateTime = new Date();\r\n    const userServices = new UserService();\r\n    const userdetails = req.userData;\r\n    const userdata = userServices.userExistBefore(userdetails.email);\r\n    if (userdata === undefined) {\r\n        res.status(404).json({\r\n            status: 404,\r\n            msg: 'wrong email or password',\r\n        });\r\n    }\r\n    req.passedUser = userdata;\r\n    const AccountPayload = req.body;\r\n    try {\r\n        AccountPayload.accountNumber = generateAccount();\r\n    } catch (e) {\r\n        return res.status(500).json({\r\n            msg: 'failed to gen account',\r\n        });\r\n    }\r\n\r\n    AccountPayload.status = 'active';\r\n    AccountPayload.createdOn = currentDateTime.toString();\r\n    AccountPayload.owner = userdata.id;\r\n    console.log(AccountPayload);\r\n    req.AccountInput = AccountPayload;\r\n    next();\r\n};\r\n\r\nexport default AccountScafold;\r\n"],"file":"AccountScafold.js"}