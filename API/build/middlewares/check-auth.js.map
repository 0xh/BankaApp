{"version":3,"sources":["../../app/middlewares/check-auth.js"],"names":["verifyToken","req","res","next","token","headers","authorization","split","decoded","jwt","verify","process","env","SECRET_KEY","userData","err","status","json","msg","data"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAI;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;;AACA,QAAMC,OAAO,GAAGC,yBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAhB;;AACAZ,IAAAA,GAAG,CAACa,QAAJ,GAAeN,OAAf;AACAL,IAAAA,IAAI;AACP,GALD,CAKE,OAAOY,GAAP,EAAY;AACVb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,MAAAA,GAAG,EAAE,yCADY;AAEjBC,MAAAA,IAAI,mCAA4BJ,GAA5B;AAFa,KAArB;AAIH;AACJ,CAZD;;eAcef,W","sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nconst verifyToken = (req, res, next) => {\r\n    try {\r\n        const token = req.headers.authorization.split(' ')[1];\r\n        const decoded = jwt.verify(token, process.env.SECRET_KEY);\r\n        req.userData = decoded;\r\n        next();\r\n    } catch (err) {\r\n        res.status(401).json({\r\n            msg: 'Auth failed token couldn\\'t be verified',\r\n            data: `this was the error msg ${err}`,\r\n        })\r\n    }\r\n}\r\n\r\nexport default verifyToken; "],"file":"check-auth.js"}