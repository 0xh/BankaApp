{"version":3,"sources":["../../app/services/userService.js"],"names":["UserService","data","userData","newUser","myUser","length","id","push","mail","check","find","user","email"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEMA,W;;;AACF,yBAAc;AAAA;;AACV,SAAKC,IAAL,GAAYC,kBAAZ;AACH;AACD;;;;;;;;+BAKWC,O,EAAS;AAChB,UAAMC,MAAM,GAAGD,OAAf;AADgB,UAERE,MAFQ,GAEG,KAAKJ,IAFR,CAERI,MAFQ;AAAA,UAGVC,EAHU,GAGH,KAAKL,IAAL,CAAUI,MAAM,GAAG,CAAnB,CAHG,CAGVC,EAHU;AAIhBA,MAAAA,EAAE,IAAI,CAAN;AACAF,MAAAA,MAAM,CAACE,EAAP,GAAYA,EAAZ;AACA,WAAKL,IAAL,CAAUM,IAAV,CAAeH,MAAf;AACA,aAAOA,MAAP;AACH;AACD;;;;;;;;oCAMgBI,I,EAAM;AAClB,UAAMC,KAAK,GAAG,KAAKR,IAAL,CAAUS,IAAV,CAAe,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,KAAL,KAAeJ,IAAnB;AAAA,OAAnB,CAAd;AACA,aAAOC,KAAP;AACH;AACD;;;;;;;;;;;;;;;;;;;;;;eAmBWT,W","sourcesContent":["import userData from '../../utils/userdb';\r\n\r\nclass UserService {\r\n    constructor() {\r\n        this.data = userData;\r\n    }\r\n    /*\r\n        fetchAllUsers() {\r\n            return this.data.map(users => users);\r\n        } */\r\n\r\n    addNewUser(newUser) {\r\n        const myUser = newUser;\r\n        const { length } = this.data;\r\n        let { id } = this.data[length - 1];\r\n        id += 1;\r\n        myUser.id = id;\r\n        this.data.push(myUser);\r\n        return myUser;\r\n    }\r\n    /*\r\n        getUserbyId(id) {\r\n            const selectedUser = this.data.find(user => parseInt(user.id, 10) === parseInt(id, 10));\r\n            return selectedUser;\r\n        } */\r\n\r\n    userExistBefore(mail) {\r\n        const check = this.data.find(user => user.email === mail);\r\n        return check;\r\n    }\r\n    /*\r\n        putUser(userput, id) {\r\n            const selectedUser = this.data.find(user => parseInt(user.id, 10) === parseInt(id, 10));\r\n            selectedUser.firstName = userput.firstName;\r\n            selectedUser.lastName = userput.lastName;\r\n            selectedUser.email = userput.email;\r\n            selectedUser.isAdmin = userput.isAdmin;\r\n            return selectedUser;\r\n        }\r\n    \r\n        deleteUser(id) {\r\n            const selectedUser = this.data.find(user => parseInt(user.id, 10) === parseInt(id, 10));\r\n            this.data.splice(selectedUser.id - 1, 1);\r\n            return this.data;\r\n    \r\n        } */\r\n\r\n}\r\n\r\nexport default UserService;\r\n"],"file":"userService.js"}